#!/usr/bin/env bash
#
# GRAKN.AI - THE KNOWLEDGE GRAPH
# Copyright (C) 2018 Grakn Labs Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# Grakn global variables
JAVA_BIN=java
[[ $(readlink $0) ]] && path=$(readlink $0) || path=$0
GRAKN_HOME=$(cd "$(dirname "${path}")" && pwd -P)
GRAKN_CONFIG="conf/grakn.properties"

CONSOLE_JAR_FILENAME="console/services/lib/libconsole.jar"
SERVER_JAR_FILENAME="server/services/lib/libserver.jar"

# ================================================
# common helper functions
# ================================================
exit_if_java_not_found() {
  which "${JAVA_BIN}" > /dev/null
  exit_code=$?

  if [[ $exit_code -ne 0 ]]; then
    echo "Java is not installed on this machine. Grakn needs Java 1.8 in order to run. See the following setup guide: http://dev.grakn.ai/docs/get-started/setup-guide"
    exit 1
  fi
}

# =============================================
# main routine
# =============================================

exit_code=0

pushd "$GRAKN_HOME" > /dev/null
exit_if_java_not_found

if [ -z "$1" ]; then
    echo "Missing argument. Possible commands are:"
    echo "  Server:          grakn server [--help]"
    echo "  Console:         grakn console [--help]"
    echo "  Version:         grakn version"
elif [ "$1" = "console" ]; then
    if [ -f "${GRAKN_HOME}/${CONSOLE_JAR_FILENAME}" ]; then
        SERVICE_LIB_CP="console/services/lib/*"
        CLASSPATH="${GRAKN_HOME}/${SERVICE_LIB_CP}:${GRAKN_HOME}/conf/"
        java -cp "${CLASSPATH}" -Dgrakn.dir="${GRAKN_HOME}" -Dgrakn.conf="${GRAKN_HOME}/${GRAKN_CONFIG}" grakn.core.console.GraknConsole "$@"
    else
        echo "Grakn Core Console is not included in this Grakn distribution."
        echo "You may want to install Grakn Core Console or Grakn Core (all)."
    fi
elif [[ "$1" = "server" ]] || [[ "$1" = "version" ]]; then
    if [[ -f "${GRAKN_HOME}/${SERVER_JAR_FILENAME}" ]]; then
        SERVICE_LIB_CP="server/services/lib/*"
        CLASSPATH="${GRAKN_HOME}/${SERVICE_LIB_CP}:${GRAKN_HOME}/conf/"
        java -cp "${CLASSPATH}" -Dgrakn.dir="${GRAKN_HOME}" -Dgrakn.conf="${GRAKN_HOME}/${GRAKN_CONFIG}" -Dserver.javaopts="${SERVER_JAVAOPTS}" grakn.core.daemon.GraknDaemon $@
    else
        echo "Grakn Core Server is not included in this Grakn distribution."
        echo "You may want to install Grakn Core Server or Grakn Core (all)."
    fi
else
    echo "Invalid argument: $1. Possible commands are: "
    echo "  Server:          grakn server [--help]"
    echo "  Console:         grakn console [--help]"
    echo "  Version:         grakn version"
fi

exit_code=$?

popd > /dev/null

exit $exit_code
