version: 2.1
commands:
  bazel_install:
    steps:
      - run:
          name: Bazel - Install
          command: |
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-linux-x86_64.sh
            chmod +x bazel-0.20.0-installer-linux-x86_64.sh
            sudo ./bazel-0.20.0-installer-linux-x86_64.sh

jobs:
  test:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - bazel_install
      - run: sudo apt-get update
      - run: pyenv install 3.6.3
      - run: pyenv global 3.6.3
      - run: wget https://storage.googleapis.com/kglib/grakn-core-all-20750ca0a46b4bc252ad81edccdfd8d8b7c46caa.zip
      - run: unzip grakn-core-all-20750ca0a46b4bc252ad81edccdfd8d8b7c46caa.zip
      - run: nohup grakn-core-all/grakn server start
      - run: cd grakn-core-all && ./grakn console -k test_schema -f ../kglib/kgcn/test_data/schema.gql
      - run: bazel test //kglib/... --test_output=streamed --force_python PY3 --python_path $(which python)

  test-deploy-pip:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - bazel_install
      - run: sudo apt-get update
      - run: pyenv install 3.6.3
      - run: pyenv global 3.6.3
      - run: date +%s > VERSION
      - run: cat VERSION
      - run: bazel run //:deploy-pip -- test $PYPI_TEST_SERVER_USERNAME $PYPI_TEST_SERVER_PASSWORD

  end-to-end-test:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - bazel_install
      - run: sudo apt-get update
      - run: pyenv install 3.6.3
      - run: pyenv global 3.6.3
      - run: bazel test //examples:test_pypi_end_to_end_test --test_output=streamed --force_python PY3 --python_path $(which python) --spawn_strategy=standalone

  deploy-git:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - run: wget https://github.com/tcnksm/ghr/releases/download/v0.12.0/ghr_v0.12.0_linux_386.tar.gz
      - run: tar xvf ghr_v0.12.0_linux_386.tar.gz
      - run:
         name: "Publish Draft Release on GitHub"
         command: |
           VERSION_TAG="v"$(cat "VERSION")
           curl -X POST --fail --data "{\"tag_name\": \"${VERSION_TAG}\",\"target_commitish\": \"${CIRCLE_SHA1}\",\"name\": \"Draft\",\"body\": \"\",\"draft\": true,\"prerelease\": false}" https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases?access_token=${GITHUB_DEPLOYMENT_TOKEN}

  deploy-pip:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - bazel_install
      - run: sudo apt-get update
      - run: pyenv install 3.6.3
      - run: pyenv global 3.6.3
      - run: bazel run //:deploy-pip -- pypi $PYPI_USERNAME $PYPI_PASSWORD

workflows:
  version: 2
  kglib:
    jobs:
      - test
      - test-deploy-pip:
          requires:
            - test
      - end-to-end-test:
          requires:
            - test-deploy-pip
      - approve-deploy-git:
          type: approval
          requires:
            - end-to-end-test
      - deploy-git:
          requires:
            - approve-deploy-git
      - approve-deploy-pip:
          type: approval
          requires:
            - deploy-git
      - deploy-pip:
          requires:
            - approve-deploy-pip