version: 2.1
commands:
  bazel_install:
    steps:
      - run:
          name: Bazel - Install
          command: |
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.25.2/bazel-0.25.2-installer-linux-x86_64.sh
            chmod +x bazel-0.25.2-installer-linux-x86_64.sh
            sudo ./bazel-0.25.2-installer-linux-x86_64.sh

jobs:
  test:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - bazel_install
      - run: pyenv install 3.6.3
      - run: pyenv global 3.6.3
      - run: bazel test //kglib/... --test_output=streamed --spawn_strategy=standalone --python_version PY3 --python_path $(which python)

  deploy-pip-snapshot:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - bazel_install
      - run: pyenv install 3.6.3
      - run: pyenv global 3.6.3
      - run: |
          echo -n "$(cat VERSION)-$CIRCLE_SHA1" > VERSION
          export DEPLOY_PIP_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_PIP_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run //:deploy-pip -- snapshot

  test-deployment-pip:
      machine: true
      working_directory: ~/kglib
      steps:
        - checkout
        - run: pyenv install 3.6.3
        - run: pyenv global 3.6.3
        - run: wget https://storage.googleapis.com/kglib/grakn-core-all-mac-animaltrade1.5.3.zip
        - run: unzip grakn-core-all-mac-animaltrade1.5.3.zip
        - run: nohup grakn-core-all-mac-animaltrade1.5.3/grakn server start
        - run:
            name: Run test-deployment-pip for kglib
            command: |
              echo -n "$(cat VERSION)-$CIRCLE_SHA1" > VERSION
              sed -i -e "s/KGLIB_VERSION_MARKER/$(cat VERSION)/g" test/deployment/requirements.txt
              cat test/deployment/requirements.txt
              pip install -r test/deployment/requirements.txt
              python -m unittest examples.kgcn.animal_trade.test.end_to_end_test

  release-approval:
    machine: true
    steps:
      - bazel_install
      - checkout
      - run: |
          export RELEASE_APPROVAL_USERNAME=$REPO_GITHUB_USERNAME
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:release-approval

  deploy-git:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - run: wget https://github.com/tcnksm/ghr/releases/download/v0.12.0/ghr_v0.12.0_linux_386.tar.gz
      - run: tar xvf ghr_v0.12.0_linux_386.tar.gz
      - run: |
          pip install certifi
          export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:release-notes -- grakn $(cat VERSION) ./RELEASE_TEMPLATE.md
      - run:
         name: "Publish Draft Release on GitHub"
         command: |
           VERSION_TAG="v"$(cat "VERSION")
           curl -X POST --fail --data "{\"tag_name\": \"${VERSION_TAG}\",\"target_commitish\": \"${CIRCLE_SHA1}\",\"name\": \"Draft\",\"body\": \"\",\"draft\": true,\"prerelease\": false}" https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases?access_token=${GITHUB_DEPLOYMENT_TOKEN}

  deploy-pip-release:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - bazel_install
      - run: pyenv install 3.6.3
      - run: pyenv global 3.6.3
      - run: |
          export DEPLOY_PIP_USERNAME=$REPO_PYPI_USERNAME
          export DEPLOY_PIP_PASSWORD=$REPO_PYPI_PASSWORD
          bazel run //:deploy-pip -- release

workflows:
  kglib:
    jobs:
      - test
      - deploy-pip-snapshot:
          requires:
            - test
      - test-deployment-pip:
          requires:
            - deploy-pip-snapshot
      - release-approval:
          requires:
            - test-deployment-pip
  kglib-release:
    jobs:
      - deploy-git
      - deploy-approval:
          type: approval
          requires:
            - deploy-git
      - deploy-pip-release:
          requires:
            - deploy-approval
      - release-cleanup:
          machine: true
          steps:
            - checkout
            - run: git push --delete origin kglib-release-branch